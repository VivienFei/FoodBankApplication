/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FoundationEmployee.Nutrition;

import FoodBankSystem.Foundation;
import FoodBankSystem.Menu.Menu;
import FoodBankSystem.Menu.Menu.AgeGroup;
import FoodBankSystem.Menu.Menu.AvgIncome;
import FoodBankSystem.Menu.MenuItem;
import FoodBankSystem.Menu.MenuItemList;
import FoodBankSystem.Supplier.Product.Product;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rui
 */
public class CreateMenuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateMenuJPanel
     */
    
    JPanel userProcessContainer;
    Foundation foundation;    
    MenuItemList menuItemList;
    
    public CreateMenuJPanel(JPanel userProcessContainer, Foundation foundation) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.foundation = foundation;
        menuItemList = new MenuItemList();
        
        popAllCombox();
    }
    
    private void popAllCombox()
    {
        menuTypeCombox.removeAllItems();
        menuTypeCombox.addItem("-");
        menuTypeCombox.addItem("Basic");
        menuTypeCombox.addItem("Nutritious");

        targetAgeCombox.removeAllItems();   
        targetAgeCombox.addItem("-");
        for(AgeGroup agegroup : Menu.AgeGroup.values())
        {
            targetAgeCombox.addItem(agegroup.getValue());
        }                
        
        targetHealthConditionCombox.removeAllItems();
        targetHealthConditionCombox.addItem("-");
        targetHealthConditionCombox.addItem("Illness");
        targetHealthConditionCombox.addItem("Health");
        
        targetIncomeCombox.removeAllItems();
        targetIncomeCombox.addItem("-");
        for (AvgIncome avgIncome : Menu.AvgIncome.values())
        {
            targetIncomeCombox.addItem(avgIncome.getValue());
        }
        
        invisibleButton.setVisible(false);
        invisibleButton.setSelected(true);
        
        popStatesCombox();
        
        targetSeasonCombox.removeAllItems();
        targetSeasonCombox.addItem("-");

        targetSeasonCombox.addItem("Spring");
        targetSeasonCombox.addItem("Summer");
        targetSeasonCombox.addItem("Fall");
        targetSeasonCombox.addItem("Winter");
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        targetAgeCombox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        targetHealthConditionCombox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        femaleRadioButton = new javax.swing.JRadioButton();
        maleRadioButton = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        targetIncomeCombox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        targetStateCombox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        menuTypeCombox = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        menuTable = new javax.swing.JTable();
        addComponentButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        quantityText = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        targetSeasonCombox = new javax.swing.JComboBox();
        backButton = new javax.swing.JButton();
        saveMenuButton = new javax.swing.JButton();
        invisibleButton = new javax.swing.JRadioButton();
        removeComponentButton = new javax.swing.JButton();
        foodNameText = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Create Menu");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Basic Information");

        jLabel3.setText("Menu Type");

        jLabel4.setText("Target Age Group");

        targetAgeCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Target Health Condition");

        targetHealthConditionCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Target Gender");

        gender.add(femaleRadioButton);
        femaleRadioButton.setText("Female");

        gender.add(maleRadioButton);
        maleRadioButton.setText("Male");

        jLabel7.setText("Target Income");

        targetIncomeCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("Target State");

        targetStateCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel9.setText("Menu Detail");

        menuTypeCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        menuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Food Name", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(menuTable);

        addComponentButton.setText("Add Component");
        addComponentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addComponentButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Food Name");

        jLabel11.setText("Quantity");

        jLabel12.setText("Target Season");

        targetSeasonCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        saveMenuButton.setText("Save Menu");
        saveMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuButtonActionPerformed(evt);
            }
        });

        gender.add(invisibleButton);
        invisibleButton.setEnabled(false);

        removeComponentButton.setText("Remove Component");
        removeComponentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeComponentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(femaleRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(maleRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(invisibleButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(targetHealthConditionCombox, javax.swing.GroupLayout.Alignment.LEADING, 0, 128, Short.MAX_VALUE)
                                .addComponent(targetAgeCombox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(menuTypeCombox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(targetIncomeCombox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(quantityText, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(foodNameText, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(targetSeasonCombox, javax.swing.GroupLayout.Alignment.LEADING, 0, 128, Short.MAX_VALUE)
                                .addComponent(targetStateCombox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(65, 65, 65))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addComponentButton)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(removeComponentButton)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(backButton)
                                        .addGap(180, 180, 180)
                                        .addComponent(saveMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuTypeCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(targetAgeCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(targetHealthConditionCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(targetIncomeCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(femaleRadioButton)
                        .addComponent(maleRadioButton))
                    .addComponent(invisibleButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(targetStateCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(targetSeasonCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(foodNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(quantityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addComponentButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeComponentButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(saveMenuButton))
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void saveMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuButtonActionPerformed
        Menu menu = foundation.getMenuCatalog().addMenu();
        
        //type

        String type = (String)menuTypeCombox.getSelectedItem();
        menu.setType(type);
        
        //age group
        
        
        if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Youth1.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Youth1.getValue());
        }
        else if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Youth2.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Youth2.getValue());

        }
        else if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Youth3.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Youth3.getValue());

        }
        else if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Youth4.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Youth4.getValue());

        }
        else if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Adult1.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Adult1.getValue());

        }
        else if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Adult2.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Adult2.getValue());

        }
        else if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Adult3.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Adult3.getValue());

        }
        else if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Old1.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Old1.getValue());

        }
        else if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Old2.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Old2.getValue());

        }

        else if(targetAgeCombox.getSelectedItem().equals(AgeGroup.Old3.getValue()))
        {
            menu.setAgeGroup(AgeGroup.Old3.getValue());
        }
        
        //health condition
        menu.setHealthCondition((String)targetHealthConditionCombox.getSelectedItem());
        
        //gender
        String gender;
        boolean isFemale = femaleRadioButton.isSelected();
        boolean isMale = maleRadioButton.isSelected();
        if (isFemale == true)
        {
            gender = "Female";
            menu.setGender(gender);
        }
        else if (isMale == true)
        {
            gender = "Male";
            menu.setGender(gender);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please Select Target Gender");
        }
               
        //state
        menu.setState((String)targetStateCombox.getSelectedItem());
        
        //season
        menu.setSeason((String)targetSeasonCombox.getSelectedItem());
        
        //avg income
        if(targetIncomeCombox.getSelectedItem().equals(AvgIncome.Poverty1.getValue()))
        {
            menu.setAvgIncome(AvgIncome.Poverty1.getValue());
        }
        if(targetIncomeCombox.getSelectedItem().equals(AvgIncome.Poverty2.getValue()))
        {
            menu.setAvgIncome(AvgIncome.Poverty2.getValue());
        }
        if(targetIncomeCombox.getSelectedItem().equals(AvgIncome.Poverty3.getValue()))
        {
            menu.setAvgIncome(AvgIncome.Poverty3.getValue());
        }
        if(targetIncomeCombox.getSelectedItem().equals(AvgIncome.Poverty4.getValue()))
        {
            menu.setAvgIncome(AvgIncome.Poverty4.getValue());
        }
        
        
        
        menu.setMenuItemList(menuItemList);
                        
        JOptionPane.showMessageDialog(null, "Menu saved");

        System.out.println(foundation.getMenuCatalog().getMenus());
        
        resetFields();
                              
    }//GEN-LAST:event_saveMenuButtonActionPerformed

    private void resetFields()
    {
        menuTypeCombox.setSelectedItem("-");
        targetAgeCombox.setSelectedItem("-");
        targetHealthConditionCombox.setSelectedItem("-");
        targetIncomeCombox.setSelectedItem("-");
        targetSeasonCombox.setSelectedItem("-");
        targetStateCombox.setSelectedItem("-");
        invisibleButton.setSelected(true);
        foodNameText.setText("");
        quantityText.setText("");
                
        menuItemList = new MenuItemList();
        
//        for(MenuItem mi : menuItemList.getMenuItems())
//        {
//            menuItemList.removeMenuItem(mi);
//        }
        
        DefaultTableModel dtm = (DefaultTableModel)menuTable.getModel();
        dtm.setRowCount(0);
    }
    private void addComponentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addComponentButtonActionPerformed
               
        String foodName = foodNameText.getText();
        Product product = new Product(foodName);
        
        MenuItem menuItem = menuItemList.addMenuItem(product);
        menuItem.setQuantity(Integer.parseInt(quantityText.getText()));
                       
        
        DefaultTableModel dtm = (DefaultTableModel)menuTable.getModel();
        dtm.setRowCount(0);
        
        for(MenuItem mi : menuItemList.getMenuItems())
        {
            Object[] row = new Object[2];
            row[0] = mi;
            row[1] = mi.getQuantity();
            dtm.addRow(row);
        }
        
                
    }//GEN-LAST:event_addComponentButtonActionPerformed

    private void removeComponentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeComponentButtonActionPerformed
        int selectedRow = menuTable.getSelectedRow();
        
        MenuItem menuItem = (MenuItem)menuTable.getValueAt(selectedRow, 0);
        
        menuItemList.removeMenuItem(menuItem);
        
        DefaultTableModel dtm = (DefaultTableModel)menuTable.getModel();
        dtm.setRowCount(0);
        
        for(MenuItem mi : menuItemList.getMenuItems())
        {
            Object[] row = new Object[2];
            row[0] = mi;
            row[1] = mi.getQuantity();
            
            dtm.addRow(row);
        }
        
    }//GEN-LAST:event_removeComponentButtonActionPerformed

    private void popStatesCombox()
    {
        targetStateCombox.removeAllItems();
        
        targetStateCombox.addItem("-");
        targetStateCombox.addItem("Alabama");
        targetStateCombox.addItem("Alaska");
        targetStateCombox.addItem("Arizona");
        targetStateCombox.addItem("Arkansas");
        targetStateCombox.addItem("California");
        targetStateCombox.addItem("Colorado");
        targetStateCombox.addItem("Connecticut");
        targetStateCombox.addItem("Delaware");
        targetStateCombox.addItem("Florida");
        targetStateCombox.addItem("Georgia");
        targetStateCombox.addItem("Hawaii");
        targetStateCombox.addItem("Idaho");
        targetStateCombox.addItem("Illinois");
        targetStateCombox.addItem("Indiana");
        targetStateCombox.addItem("Iowa");
        targetStateCombox.addItem("Kansas");
        targetStateCombox.addItem("Kentucky");
        targetStateCombox.addItem("Louisiana");
        targetStateCombox.addItem("Maine");
        targetStateCombox.addItem("Maryland");
        targetStateCombox.addItem("Massachusetts");
        targetStateCombox.addItem("Michigan");
        targetStateCombox.addItem("Minnesota");
        targetStateCombox.addItem("Mississippi");
        targetStateCombox.addItem("Missouri");
        targetStateCombox.addItem("Montana");
        targetStateCombox.addItem("Nebraska");
        targetStateCombox.addItem("Nevada");
        targetStateCombox.addItem("New Hampshire");
        targetStateCombox.addItem("New Jersey");
        targetStateCombox.addItem("New Mexico");
        targetStateCombox.addItem("New York");
        targetStateCombox.addItem("North Carolina");
        targetStateCombox.addItem("North Dakota");
        targetStateCombox.addItem("Ohio");
        targetStateCombox.addItem("Oklahoma");
        targetStateCombox.addItem("Oregon");
        targetStateCombox.addItem("Pennsylvania");
        targetStateCombox.addItem("Rhode Island");
        targetStateCombox.addItem("South Carolina");
        targetStateCombox.addItem("South Dakota");
        targetStateCombox.addItem("Tennessee");
        targetStateCombox.addItem("Texas");
        targetStateCombox.addItem("Utah");
        targetStateCombox.addItem("Vermont");
        targetStateCombox.addItem("Virginia");
        targetStateCombox.addItem("Washington");
        targetStateCombox.addItem("West Virginia");
        targetStateCombox.addItem("Wisconsin");
        targetStateCombox.addItem("Wyoming");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addComponentButton;
    private javax.swing.JButton backButton;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField foodNameText;
    private javax.swing.ButtonGroup gender;
    private javax.swing.JRadioButton invisibleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JTable menuTable;
    private javax.swing.JComboBox menuTypeCombox;
    private javax.swing.JTextField quantityText;
    private javax.swing.JButton removeComponentButton;
    private javax.swing.JButton saveMenuButton;
    private javax.swing.JComboBox targetAgeCombox;
    private javax.swing.JComboBox targetHealthConditionCombox;
    private javax.swing.JComboBox targetIncomeCombox;
    private javax.swing.JComboBox targetSeasonCombox;
    private javax.swing.JComboBox targetStateCombox;
    // End of variables declaration//GEN-END:variables
}

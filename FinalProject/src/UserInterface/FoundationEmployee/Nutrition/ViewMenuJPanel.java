/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FoundationEmployee.Nutrition;

import FoodBankSystem.Foundation;
import FoodBankSystem.Menu.Menu;
import FoodBankSystem.Menu.Menu.AgeGroup;
import FoodBankSystem.Menu.MenuCatalog;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rui
 */
public class ViewMenuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewMenuJPanel
     */
        
    JPanel userProcessContainer;
    Foundation foundation;
    MenuCatalog menuCatalog;
   
    public ViewMenuJPanel(JPanel userProcessContainer, Foundation foundation) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.foundation = foundation;
        
        popAllCombox();
         
    }
    private void popAllCombox()
    {
        typeCombox.removeAllItems();
        typeCombox.addItem("-");
        typeCombox.addItem("Basic");
        typeCombox.addItem("Nutritious");

        ageCombox.removeAllItems();    
        ageCombox.addItem("-");
        for(AgeGroup agegroup : Menu.AgeGroup.values())
        {
            ageCombox.addItem(agegroup.getValue());
        }                
        
        healthConditionCombox.removeAllItems();
        healthConditionCombox.addItem("-");
        healthConditionCombox.addItem("Illness");
        healthConditionCombox.addItem("Health");
        
        incomeCombox.removeAllItems();
        incomeCombox.addItem("-");
        for (Menu.AvgIncome avgIncome : Menu.AvgIncome.values())
        {
            incomeCombox.addItem(avgIncome.getValue());
        }
        
        genderCombox.removeAllItems();
        genderCombox.addItem("-");
        genderCombox.addItem("Female");
        genderCombox.addItem("Male");
        
        popStatesCombox();
        
        seasonCombox.removeAllItems();
        seasonCombox.addItem("-");
        seasonCombox.addItem("Spring");
        seasonCombox.addItem("Summer");
        seasonCombox.addItem("Fall");
        seasonCombox.addItem("Winter");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        menuListTable = new javax.swing.JTable();
        viewDetailButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ageCombox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        genderCombox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        typeCombox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        healthConditionCombox = new javax.swing.JComboBox<>();
        incomeCombox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        stateCombox = new javax.swing.JComboBox<>();
        seasonCombox = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("View/Update Menu");

        menuListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "MenuID"
            }
        ));
        jScrollPane2.setViewportView(menuListTable);

        viewDetailButton.setText("View Detail");
        viewDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Search Menu By:");

        jLabel4.setText("Age");

        ageCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Gender");

        genderCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Type");

        typeCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Health Condition");

        jLabel8.setText("Income");

        healthConditionCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        incomeCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("State");

        jLabel12.setText("Season");

        stateCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        seasonCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(138, 138, 138))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(typeCombox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ageCombox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(genderCombox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(healthConditionCombox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(incomeCombox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stateCombox, 0, 123, Short.MAX_VALUE)
                            .addComponent(seasonCombox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewDetailButton))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(typeCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ageCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(genderCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(healthConditionCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(incomeCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(seasonCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetailButton)
                    .addComponent(backButton))
                .addGap(64, 64, 64))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailButtonActionPerformed
        
        int SelectedRow = menuListTable.getSelectedRow();
        
        if (SelectedRow >= 0)
        {
            Menu menu = (Menu)menuListTable.getValueAt(SelectedRow, 0);
            ViewMenuDetailJPanel vmdjp = new ViewMenuDetailJPanel(userProcessContainer, menu);
            userProcessContainer.add("ViewMenuDetailJPanel", vmdjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }else
        {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }       
    }//GEN-LAST:event_viewDetailButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        menuCatalog = new MenuCatalog();
                
        for (Menu menu : foundation.getMenuCatalog().getMenus())
        {
            boolean typeMatch = false;
            if(typeCombox.getSelectedItem() == "-" || menu.getType().equals(typeCombox.getSelectedItem()))
            {
                typeMatch = true;
            }
            
            boolean ageMatch = false;
            if(ageCombox.getSelectedItem() == "-" || menu.getAgeGroup().equals(ageCombox.getSelectedItem()))
            {
                ageMatch = true;
            }
            
            boolean genderMatch = false;
            if(genderCombox.getSelectedItem() == "-" || menu.getGender().equals(genderCombox.getSelectedItem()))
            {
                genderMatch = true;
            }
            
            boolean healthConditionMatch = false;
            if(healthConditionCombox.getSelectedItem() == "-" || menu.getHealthCondition().equals(healthConditionCombox.getSelectedItem()))
            {
                 healthConditionMatch = true;
            }           
            
            boolean incomeMatch = false;
            if(incomeCombox.getSelectedItem() == "-" || menu.getAvgIncome().equals(incomeCombox.getSelectedItem()));
            {
                incomeMatch = true;
            }
            
            boolean stateMatch = menu.getState().equals(stateCombox.getSelectedItem());
            if(stateCombox.getSelectedItem() == "-")
            {
                stateMatch = true;
            }
            
            boolean seasonMatch = false;
            if(seasonCombox.getSelectedItem() == "-" || menu.getSeason().equals(seasonCombox.getSelectedItem()))
            {
                seasonMatch = true;
            }
            
            
            if (typeMatch == true && ageMatch == true && genderMatch == true &&
                healthConditionMatch == true && incomeMatch == true &&
                stateMatch ==true && seasonMatch == true)
            {
                menuCatalog.getMenus().add(menu);
            }
                                 
        }
        
        if (menuCatalog.getMenus().size() == 0)
        {            
            DefaultTableModel dtm = (DefaultTableModel)menuListTable.getModel();
            dtm.setRowCount(0);
            JOptionPane.showMessageDialog(null, "Menu Not Found");
        }else
        {
            DefaultTableModel dtm = (DefaultTableModel)menuListTable.getModel();
            dtm.setRowCount(0);
            for (Menu m : menuCatalog.getMenus())
            {
                Object row[] = new Object[1];
                row[0] = m;
                dtm.addRow(row);
            }
        }
          
    }//GEN-LAST:event_searchButtonActionPerformed

private void popStatesCombox()
    {
        stateCombox.removeAllItems();
        stateCombox.addItem("-");
        
        stateCombox.addItem("Alabama");
        stateCombox.addItem("Alaska");
        stateCombox.addItem("Arizona");
        stateCombox.addItem("Arkansas");
        stateCombox.addItem("California");
        stateCombox.addItem("Colorado");
        stateCombox.addItem("Connecticut");
        stateCombox.addItem("Delaware");
        stateCombox.addItem("Florida");
        stateCombox.addItem("Georgia");
        stateCombox.addItem("Hawaii");
        stateCombox.addItem("Idaho");
        stateCombox.addItem("Illinois");
        stateCombox.addItem("Indiana");
        stateCombox.addItem("Iowa");
        stateCombox.addItem("Kansas");
        stateCombox.addItem("Kentucky");
        stateCombox.addItem("Louisiana");
        stateCombox.addItem("Maine");
        stateCombox.addItem("Maryland");
        stateCombox.addItem("Massachusetts");
        stateCombox.addItem("Michigan");
        stateCombox.addItem("Minnesota");
        stateCombox.addItem("Mississippi");
        stateCombox.addItem("Missouri");
        stateCombox.addItem("Montana");
        stateCombox.addItem("Nebraska");
        stateCombox.addItem("Nevada");
        stateCombox.addItem("New Hampshire");
        stateCombox.addItem("New Jersey");
        stateCombox.addItem("New Mexico");
        stateCombox.addItem("New York");
        stateCombox.addItem("North Carolina");
        stateCombox.addItem("North Dakota");
        stateCombox.addItem("Ohio");
        stateCombox.addItem("Oklahoma");
        stateCombox.addItem("Oregon");
        stateCombox.addItem("Pennsylvania");
        stateCombox.addItem("Rhode Island");
        stateCombox.addItem("South Carolina");
        stateCombox.addItem("South Dakota");
        stateCombox.addItem("Tennessee");
        stateCombox.addItem("Texas");
        stateCombox.addItem("Utah");
        stateCombox.addItem("Vermont");
        stateCombox.addItem("Virginia");
        stateCombox.addItem("Washington");
        stateCombox.addItem("West Virginia");
        stateCombox.addItem("Wisconsin");
        stateCombox.addItem("Wyoming");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ageCombox;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> genderCombox;
    private javax.swing.JComboBox<String> healthConditionCombox;
    private javax.swing.JComboBox incomeCombox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable menuListTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> seasonCombox;
    private javax.swing.JComboBox<String> stateCombox;
    private javax.swing.JComboBox<String> typeCombox;
    private javax.swing.JButton viewDetailButton;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FoodBankEmployee.SupplierMgtRole;

import FoodBankSystem.FoodBank.FoodBank;
import FoodBankSystem.Inventory.Inventory;
import FoodBankSystem.Supplier.Product.CleanerProduct;
import FoodBankSystem.Supplier.Product.ConfectionProduct;
import FoodBankSystem.Supplier.Product.DairyProduct;
import FoodBankSystem.Supplier.Product.FruitProduct;
import FoodBankSystem.Supplier.Product.GrainProduct;
import FoodBankSystem.Supplier.Product.MeatProduct;
import FoodBankSystem.Supplier.Product.PersonalCareProduct;
import FoodBankSystem.Supplier.Product.Product;
import FoodBankSystem.Supplier.Product.TissueProduct;
import FoodBankSystem.Supplier.Product.VegetableProduct;
import FoodBankSystem.Supplier.Supplier;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author fjj1213
 */

public class AddNewProductJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddInventoryJPanel
     */
    private JPanel userProcessContainer;
    private Supplier supplier;
    private FoodBank foodbank;
    public AddNewProductJPanel(JPanel upc, Supplier supplier, FoodBank foodbank) {
        initComponents();
        this.userProcessContainer=upc;
        this.supplier=supplier;
        this.foodbank=foodbank;
        
        ProductTypeComboBox.removeAllItems();
        
        for (Product.Type type : Product.Type.values()){
                ProductTypeComboBox.addItem(type);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        BackButton = new javax.swing.JButton();
        AddNewProduct = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        ProductTypeComboBox = new javax.swing.JComboBox();

        jLabel1.setText("Product Type:");

        jLabel2.setText("Product Name:");

        jLabel3.setText("Product Substitute:");

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        AddNewProduct.setText("Add");
        AddNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewProductActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel6.setText("Add New Product");

        ProductTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(BackButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddNewProduct))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGap(28, 28, 28)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ProductTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ProductTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel3)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton)
                    .addComponent(AddNewProduct))
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AddNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewProductActionPerformed
       Product.Type t=(Product.Type)ProductTypeComboBox.getSelectedItem();
        if(t == Product.Type.Dairy)
        {
            DairyProduct dp = new DairyProduct();
            supplier.getProductCatalog().addProduct(dp);
            Inventory inventory = foodbank.getInventoryCatalog().addInventory(dp);
            dp.setName(jTextField2.getText());
            dp.setSubstitute(jTextField3.getText());
        }
        else if(t == Product.Type.Fruit)
        {
            FruitProduct fp = new FruitProduct();
            supplier.getProductCatalog().addProduct(fp);
            Inventory inventory = foodbank.getInventoryCatalog().addInventory(fp);
            fp.setName(jTextField2.getText());
            fp.setSubstitute(jTextField3.getText());
        }
        else if(t == Product.Type.Grain)
        {
            GrainProduct gp = new GrainProduct();
            supplier.getProductCatalog().addProduct(gp);
            Inventory inventory = foodbank.getInventoryCatalog().addInventory(gp);
            gp.setName(jTextField2.getText());
            gp.setSubstitute(jTextField3.getText());
        }
        else if(t == Product.Type.Meat)
        {
            MeatProduct fp = new MeatProduct();
            supplier.getProductCatalog().addProduct(fp);
            Inventory inventory = foodbank.getInventoryCatalog().addInventory(fp);
            fp.setName(jTextField2.getText());
            fp.setSubstitute(jTextField3.getText());
        }
        else if(t == Product.Type.Vegetable)
        {
            VegetableProduct fp = new VegetableProduct();
            supplier.getProductCatalog().addProduct(fp);
            Inventory inventory = foodbank.getInventoryCatalog().addInventory(fp);
            fp.setName(jTextField2.getText());
            fp.setSubstitute(jTextField3.getText());
        }
        else if(t == Product.Type.PersonalCare)
        {
            PersonalCareProduct fp = new PersonalCareProduct();
            supplier.getProductCatalog().addProduct(fp);
            Inventory inventory = foodbank.getInventoryCatalog().addInventory(fp);
            fp.setName(jTextField2.getText());
            fp.setSubstitute(jTextField3.getText());
        }
        else if(t == Product.Type.Confection)
        {
            ConfectionProduct fp = new ConfectionProduct();
            supplier.getProductCatalog().addProduct(fp);
            Inventory inventory = foodbank.getInventoryCatalog().addInventory(fp);
            fp.setName(jTextField2.getText());
            fp.setSubstitute(jTextField3.getText());
        }
        else if(t == Product.Type.Cleaner)
        {
            CleanerProduct fp = new CleanerProduct();
            supplier.getProductCatalog().addProduct(fp);
            Inventory inventory = foodbank.getInventoryCatalog().addInventory(fp);
            fp.setName(jTextField2.getText());
            fp.setSubstitute(jTextField3.getText());
        }
        
        else if(t == Product.Type.Tissue)
        {
            TissueProduct fp = new TissueProduct();
            supplier.getProductCatalog().addProduct(fp);
            Inventory inventory = foodbank.getInventoryCatalog().addInventory(fp);
            fp.setName(jTextField2.getText());
            fp.setSubstitute(jTextField3.getText());
        }
 
        JOptionPane.showMessageDialog(null, "Product Successfully added", "Warning'", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_AddNewProductActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component [] componentArray = userProcessContainer.getComponents();
        Component c = componentArray[componentArray.length-1];
        ManageProductCatalogJPanel mpcjp = (ManageProductCatalogJPanel) c;
        mpcjp.populateTable(supplier);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddNewProduct;
    private javax.swing.JButton BackButton;
    private javax.swing.JComboBox ProductTypeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}

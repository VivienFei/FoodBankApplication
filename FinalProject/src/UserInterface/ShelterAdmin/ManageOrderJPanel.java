/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ShelterAdmin;

import FoodBankSystem.DashButton.DashBotton;
import FoodBankSystem.DashButton.DashBottonRecorder;
import FoodBankSystem.FoodBank.FoodBank;
import FoodBankSystem.Foundation;
import FoodBankSystem.Menu.Menu;
import FoodBankSystem.Menu.MenuItem;
import FoodBankSystem.Order.DailyOrderList;
import FoodBankSystem.Order.Order;
import FoodBankSystem.Order.OrderList;
import FoodBankSystem.Shelter.Shelter;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cuishaowen
 */
public class ManageOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrderJPanel
     */
    
    private JPanel userProcessContainer;
    private Shelter shelter;
    private FoodBank foodBank;
    private Order order;
    
    public ManageOrderJPanel(JPanel userProcessContainer, Shelter shelter, FoodBank foodBank) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.shelter = shelter;
        this.foodBank = foodBank;
//        for(DashBottonRecorder dbr : shelter.getDashButtonRecorderList().getDashBottonRecorder())
//        {
//            if(Calendar.getInstance().getTime() != shelter.getDashButtonRecorderList().addDashBottonRecorder().getDate());
//            {
//                 = shelter.getDashButtonRecorderList().addDashBottonRecorder();
//                
//                
//            }
//        }
        populateDateCombox();
    }

    
    public void populateTable(Order or){
        //Date date = (Date)dateCombox.getSelectedItem();
        
        DefaultTableModel model = (DefaultTableModel) jTablePachage.getModel();
        
        model.setRowCount(0);
        
        DefaultTableModel model2 = (DefaultTableModel) jTableOrderItem.getModel();
        
        model2.setRowCount(0);  
        

        ArrayList<Menu> menuCatalog = new ArrayList<Menu>();
        
        for (DashBottonRecorder dbr : shelter.getDashButtonRecorderList().getDashBottonRecorder()) 
        {
            if(dbr.getDate() == or.getDate())
            {
                for (DashBotton db : dbr.getDashBottonList().getDashBottons()) 
                {
                    menuCatalog.add(db.getHunger().getMenu());
                }
            }    
        }          
        
        for (Menu menu : menuCatalog)
        {
            int occurences = Collections.frequency(menuCatalog, menu);
            Object[] row = new Object[2];
            row[0] = menu;
            row[1] = occurences;
            model.addRow(row);
            for (MenuItem mi : menu.getMenuItemList().getMenuItems())
            {
                Object[] row2 = new Object[2];
                row2[0] = mi;
                row2[1] = mi.getQuantity()*occurences;
                model2.addRow(row2);
            }
        }           
    }    
    
    public void populateDateCombox()
    {
        dateCombox.removeAllItems();
        for(Order order : shelter.getOrderList().getOrders())
        {
            dateCombox.addItem(order);
        }        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePachage = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        dateCombox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableOrderItem = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        txtDashBottonID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Order");

        jTablePachage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Package ID", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(jTablePachage);

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        dateCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dateCombox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboxActionPerformed(evt);
            }
        });

        jLabel2.setText("Date:");

        jLabel3.setText("Order Item:");

        jTableOrderItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(jTableOrderItem);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel4.setText("Dash Botton ID: ");

        btnSubmit.setText("Submit Order");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmit))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)
                        .addComponent(dateCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtDashBottonID, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd))
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtDashBottonID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnAdd))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnSubmit))
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void dateComboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboxActionPerformed
        order = (Order) dateCombox.getSelectedItem();
        if(order != null)
        {
            if(order.getDate()==Calendar.getInstance().getTime())
            {
                btnAdd.setEnabled(true);
                btnSubmit.setEnabled(true);
            }
            else
            {
                btnAdd.setEnabled(false);
                btnSubmit.setEnabled(false);
            }
            populateTable(order);
        }
    }//GEN-LAST:event_dateComboxActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String dashButtonId = txtDashBottonID.getText().trim();
        if(!dashButtonId.equals(""))
        {
            JOptionPane.showConfirmDialog(null, "Please enter the dash button ID!");
            return;
        }
        
        order = (Order) dateCombox.getSelectedItem();
        if(order != null)
        {
        
            try
            {
            
                int id = Integer.parseInt(dashButtonId);
                for(DashBotton db : shelter.getDashBottonList().getDashBottons())
                {
                    if(db.getId() == id)
                    {
                        for(DashBottonRecorder dbr : shelter.getDashButtonRecorderList().getDashBottonRecorder())
                        {
                            if(dbr.getDate() == order.getDate())
                            {
                                dbr.getDashBottonList().addDashBotton(db);
                            }
                        }
                        
                    }
                }
            
                populateTable(order);
                
            }catch(NumberFormatException nfe){
                JOptionPane.showConfirmDialog(null, "Please enter digital!");
            }
        }
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        order = (Order) dateCombox.getSelectedItem();
        Order oo = null;
        if(order != null)
        {
            for(DailyOrderList o1 : foodBank.getMasterOrderList().getOrderLists())
            {
                if(o1.getDate() == order.getDate())
                {
                    for(Order o2 : o1.getOrderList().getOrders())
                    {
                        if(o2.getShelter() == order.getShelter())
                        {
                            oo = o2;
                        }
                    }
                    
                    if(oo != null)
                    {
                        o1.getOrderList().removeOrder(oo);
                    }
                    o1.getOrderList().addOrder(order);
                    JOptionPane.showConfirmDialog(null, "Order submit successfully");
                }
            }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox dateCombox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableOrderItem;
    private javax.swing.JTable jTablePachage;
    private javax.swing.JTextField txtDashBottonID;
    // End of variables declaration//GEN-END:variables
}
